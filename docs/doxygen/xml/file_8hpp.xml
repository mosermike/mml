<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="file_8hpp" kind="file" language="C++">
    <compoundname>file.hpp</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">iostream</includes>
    <includes refid="standards_8hpp" local="yes">mml/standards.hpp</includes>
    <includedby refid="mml_8hpp" local="yes">include/mml.hpp</includedby>
    <includedby refid="file_8cpp" local="yes">src/file.cpp</includedby>
    <includedby refid="log_8cpp" local="yes">src/log.cpp</includedby>
    <includedby refid="string_8cpp" local="yes">src/string.cpp</includedby>
    <includedby refid="Unix_8cpp" local="yes">src/Unix.cpp</includedby>
    <includedby refid="User_8cpp" local="yes">src/User.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>functional</label>
      </node>
      <node id="10">
        <label>float.h</label>
      </node>
      <node id="4">
        <label>mml/standards.hpp</label>
        <link refid="standards_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="1">
        <label>include/mml/file.hpp</label>
        <link refid="file_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>random</label>
      </node>
      <node id="11">
        <label>mml/definitions.hpp</label>
        <link refid="definitions_8hpp"/>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="7">
        <label>sstream</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>src/Unix.cpp</label>
        <link refid="Unix_8cpp"/>
      </node>
      <node id="9">
        <label>src/User.cpp</label>
        <link refid="User_8cpp"/>
      </node>
      <node id="3">
        <label>src/file.cpp</label>
        <link refid="file_8cpp"/>
      </node>
      <node id="8">
        <label>src/string.cpp</label>
        <link refid="string_8cpp"/>
      </node>
      <node id="1">
        <label>include/mml/file.hpp</label>
        <link refid="file_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/shell.cpp</label>
        <link refid="shell_8cpp"/>
      </node>
      <node id="2">
        <label>include/mml.hpp</label>
        <link refid="mml_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/log.cpp</label>
        <link refid="log_8cpp"/>
      </node>
      <node id="6">
        <label>test/standards.cpp</label>
        <link refid="test_2standards_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacemml">mml</innernamespace>
    <innernamespace refid="namespacemml_1_1file">mml::file</innernamespace>
    <briefdescription>
<para>This file includes functions regarding the files. It might only work on linux as some commands might be os-dependent. The main function of here is to copy files. It also has other functions such as checking if a file exists. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mike Moser </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MML_INCLUDE_MML_FILE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MML_INCLUDE_MML_FILE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="standards_8hpp" kindref="compound">mml/standards.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="namespacemml" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemml" kindref="compound">mml</ref>{</highlight></codeline>
<codeline lineno="20" refid="namespacemml_1_1file" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">file{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemml_1_1file_1a024fab60fe782292eeeab6b68408cef9" kindref="member">add_twofiles</ref>(<sp/>std::string<sp/>filepath_input1<sp/>,<sp/>std::string<sp/>filepath_input2<sp/>,<sp/>std::string<sp/>filepath_output);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacemml_1_1file_1a3d0906e356f3e22593e89fcbec5760d7" kindref="member">byteCopy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dest,<sp/>std::size_t<sp/>blockSize,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>progress<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemml_1_1file_1ae8b01165891f2bd5e3c85a2e35a1c999" kindref="member">copy</ref><sp/>(<ref refid="classmml_1_1string" kindref="compound">mml::string</ref><sp/>src,<sp/><ref refid="classmml_1_1string" kindref="compound">mml::string</ref><sp/>dst,<sp/>std::string<sp/>name_in<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>name_ex<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blocksize<sp/>=<sp/><ref refid="definitions_8hpp_1ab8fa1cabe38c95b1cb91247e6c3fc963" kindref="member">_100MB</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose_debug=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recursive=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>progress=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>falsewrite<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacemml_1_1file_1a5c59971f2c51414f4ecbc2b3ab40909a" kindref="member">equal</ref>(std::string<sp/>src,<sp/>std::string<sp/>dst);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><sp/><ref refid="namespacemml_1_1file_1a4153c2b073b0c9a00236e982a54d772a" kindref="member">filetype</ref>(std::string<sp/>filepath);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespacemml_1_1file_1a43690ef92c0b2285f06009b1e730279c" kindref="member">humanread</ref>(std::size_t<sp/>number);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="namespacemml_1_1file_1a4037d2ecadff2ef72d423f1c6f867834" kindref="member">num_lines</ref>(std::string<sp/>path);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>ERROR<sp/>DOES<sp/>NOT<sp/>WORK</highlight></codeline>
<codeline lineno="109"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacemml_1_1file_1a25b3681154f917c6ff8701e0c158bda2" kindref="member">Program_exist</ref>(<sp/>std::string<sp/>program<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemml_1_1file_1a1e440fc12176ba6c207cef7160c5276b" kindref="member">remove</ref>(std::string<sp/>file);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemml_1_1file_1ab5ecf6e0c681e2247b280aa094213a00" kindref="member">set_date_dir</ref>(<ref refid="classmml_1_1string" kindref="compound">mml::string</ref><sp/>src,<sp/><ref refid="classmml_1_1string" kindref="compound">mml::string</ref><sp/>dst,<sp/>std::vector&lt;std::string&gt;<sp/>ends={</highlight><highlight class="stringliteral">&quot;NEF&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tif&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;JPG&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;jpg&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;MP4&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;MOV&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;PNG&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;HEIC&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;JPEG&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;jpeg&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;pdf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PDF&quot;</highlight><highlight class="normal">},<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recursive=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="namespacemml_1_1file_1a97e554f98e4d84fd1ac488fc1e44640d" kindref="member">size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespacemml_1_1file_1a1e60700072106e647f20640b94ecba55" kindref="member">size_human</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="namespacemml_1_1file_1a40d0377087a89cba13e0171ab5172a31" kindref="member">size_dir</ref>(<ref refid="classmml_1_1string" kindref="compound">mml::string</ref>&amp;<sp/>dir,<sp/>std::string<sp/>include<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>exclude<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recursive=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>human_readable=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>noexcept;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/><ref refid="namespacemml_1_1file_1aa040614064fb83b0548804e7a2b4aeb5" kindref="member">time_mod</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/mml/file.hpp"/>
  </compounddef>
</doxygen>
