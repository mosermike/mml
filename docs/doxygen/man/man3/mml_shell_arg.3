.TH "mml::shell::arg" 3 "Sun Jul 14 2024" "mml" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mml::shell::arg
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <shell\&.hpp>\fP
.PP
Inherits \fBmml::vector< mml::string >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBarg\fP (int argc1, char **argv1)"
.br
.RI "Initialize with the arguments from the main class\&. "
.ti -1c
.RI "\fBarg\fP (char **argv1, int argc1)"
.br
.RI "Initialize with the arguments from the main class\&. "
.ti -1c
.RI "template<typename\&.\&.\&. T> \fBarg\fP (const T &\&.\&.\&. args)"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fBarg\fP (std::vector< std::string > vec_temp)"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fBarg\fP ()"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fBarg\fP (\fBarg\fP &vec_copy)"
.br
.RI "Copy constructor\&. "
.ti -1c
.RI "\fBarg\fP & \fBoperator=\fP (const \fBarg\fP &vec_temp)"
.br
.ti -1c
.RI "\fBarg\fP & \fBoperator=\fP (const std::vector< \fBmml::string\fP > &vec_temp)"
.br
.ti -1c
.RI "template<typename\&.\&.\&. values> std::vector< \fBmml::string\fP > & \fBoperator()\fP (int argc1, char **argv1, const values &\&.\&.\&.value) noexcept"
.br
.RI "Initialise with the values from the terminal and separated flags given with one minus sign\&. "
.ti -1c
.RI "template<typename\&.\&.\&. values> std::vector< \fBmml::string\fP > & \fBoperator()\fP (char **argv1, int argc1, const values &\&.\&.\&.value) noexcept"
.br
.ti -1c
.RI "std::size_t \fBbegin\fP (const std::string &str) const noexcept"
.br
.RI "Determine position where an argument starts with a specific string\&. "
.ti -1c
.RI "template<typename\&.\&.\&. values> void \fBinit\fP (const values &\&.\&.\&. value) noexcept"
.br
.RI "Determine options given with one minus and separate them ignoring specific strings\&. "
.ti -1c
.RI "template<typename\&.\&.\&. values> bool \fBnexist\fP (const values &\&.\&.\&. value) const noexcept"
.br
.RI "Determine if an element does not exist\&. "
.ti -1c
.RI "std::size_t \fBpos\fP (const std::string &str) const noexcept"
.br
.RI "Determine the position of a searched string\&. "
.ti -1c
.RI "std::size_t \fBpos\fP (const std::string &str1, const std::string &str2) const noexcept"
.br
.RI "Determine the position of a searched string or another\&. "
.ti -1c
.RI "template<typename T > std::vector< \fBmml::string\fP > \fBreplace\fP (T Old, T New) noexcept"
.br
.RI "Replace a string in each element\&. "
.ti -1c
.RI "\fB~arg\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mml::shell::arg::arg (int argc1, char ** argv1)\fC [inline]\fP"

.PP
Initialize with the arguments from the main class\&. 
.PP
\fBParameters\fP
.RS 4
\fIargc1\fP Number of arguments 
.br
\fIargv1\fP Arguments 
.RE
.PP
\fBReturns\fP
.RS 4
Instance of the class 
.RE
.PP

.SS "mml::shell::arg::arg (char ** argv1, int argc1)\fC [inline]\fP"

.PP
Initialize with the arguments from the main class\&. 
.PP
\fBParameters\fP
.RS 4
\fIargv1\fP Arguments 
.br
\fIargc1\fP Number of arguments 
.RE
.PP
\fBReturns\fP
.RS 4
Instance of the class 
.RE
.PP

.SS "template<typename\&.\&.\&. T> mml::shell::arg::arg (const T &\&.\&.\&. args)\fC [inline]\fP"

.PP
Constructor\&. 
.PP
\fBParameters\fP
.RS 4
\fIargs\fP Values to be put into the class 
.RE
.PP
\fBReturns\fP
.RS 4
Instance of the class 
.RE
.PP

.SS "mml::shell::arg::arg (std::vector< std::string > vec_temp)\fC [inline]\fP"

.PP
Constructor\&. 
.SS "mml::shell::arg::arg ()\fC [inline]\fP"

.PP
Constructor\&. 
.SS "mml::shell::arg::arg (\fBarg\fP & vec_copy)\fC [inline]\fP"

.PP
Copy constructor\&. 
.PP
\fBParameters\fP
.RS 4
\fIvec_copy\fP Instance of this class 
.RE
.PP
\fBReturns\fP
.RS 4
Instance of the new created class 
.RE
.PP

.SS "mml::shell::arg::~arg ()\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "std::size_t mml::shell::arg::begin (const std::string & str) const\fC [noexcept]\fP"

.PP
Determine position where an argument starts with a specific string\&. 
.PP
\fBParameters\fP
.RS 4
\fIstr\fP element starts with this string 
.RE
.PP
\fBReturns\fP
.RS 4
Position 
.RE
.PP

.SS "template<typename\&.\&.\&. values> void mml::shell::arg::init (const values &\&.\&.\&. value)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Determine options given with one minus and separate them ignoring specific strings\&. 
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP Values which are not separated 
.RE
.PP

.SS "template<typename\&.\&.\&. values> bool mml::shell::arg::nexist (const values &\&.\&.\&. value) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Determine if an element does not exist\&. 
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP values to be looked for 
.RE
.PP
\fBReturns\fP
.RS 4
true, if values do not exist 
.RE
.PP

.SS "template<typename\&.\&.\&. values> std::vector<\fBmml::string\fP>& mml::shell::arg::operator() (char ** argv1, int argc1, const values &\&.\&.\&. value)\fC [inline]\fP, \fC [noexcept]\fP"

.SS "template<typename\&.\&.\&. values> std::vector<\fBmml::string\fP>& mml::shell::arg::operator() (int argc1, char ** argv1, const values &\&.\&.\&. value)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Initialise with the values from the terminal and separated flags given with one minus sign\&. 
.PP
\fBParameters\fP
.RS 4
\fIargc1\fP Number of arguments 
.br
\fIargv1\fP Character vector with the arguments from the shell 
.br
\fIvalue\fP Values which are not separated 
.RE
.PP
\fBReturns\fP
.RS 4
Reference to this instance 
.RE
.PP

.SS "\fBarg\fP& mml::shell::arg::operator= (const \fBarg\fP & vec_temp)\fC [inline]\fP"

.SS "\fBarg\fP& mml::shell::arg::operator= (const std::vector< \fBmml::string\fP > & vec_temp)\fC [inline]\fP"

.SS "std::size_t mml::shell::arg::pos (const std::string & str) const\fC [noexcept]\fP"

.PP
Determine the position of a searched string\&. 
.PP
\fBParameters\fP
.RS 4
\fIstr\fP Value to be looked for 
.RE
.PP
\fBReturns\fP
.RS 4
position 
.RE
.PP

.SS "std::size_t mml::shell::arg::pos (const std::string & str1, const std::string & str2) const\fC [noexcept]\fP"

.PP
Determine the position of a searched string or another\&. 
.PP
\fBParameters\fP
.RS 4
\fIstr1\fP Value to be looked for 
.br
\fIstr2\fP 
.RE
.PP
\fBReturns\fP
.RS 4
position 
.RE
.PP
\fBNote\fP
.RS 4
If str1 exists, then the position of this string is returned\&. Only if not, then the position of str2 if it exists 
.RE
.PP

.SS "template<typename T > std::vector<\fBmml::string\fP> mml::shell::arg::replace (T Old, T New)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Replace a string in each element\&. 
.PP
\fBParameters\fP
.RS 4
\fIOld\fP value to be replaced 
.br
\fINew\fP new value 
.RE
.PP
\fBReturns\fP
.RS 4
Vector of this instance 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for mml from the source code\&.
